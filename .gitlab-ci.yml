# SPDX-License-Identifier: GPL-3.0-or-later
# vim:foldmethod=marker
variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone # sometimes unclean submodule dirs otherwise
  RESPDIFF_PRIORITY: 5
  DISTROTEST_PRIORITY: 6
  RESPDIFF_COUNT: 1
  RESPDIFF_FORCE: 0
  RESPERF_FORCE: 0
  KNOT_VERSION: '2.9'
  LIBKRES_ABI: 9
  LIBKRES_NAME: libkres
  MESON_TEST: meson test -C build_ci* -t 4 --print-errorlogs
  PREFIX: $CI_PROJECT_DIR/.local

image: $CI_REGISTRY/knot/knot-resolver/ci/debian-buster:knot-$KNOT_VERSION

stages:
  - build
  - test
  - extended
  - deploy
  - deploy-test

# build {{{
.build: &build
  stage: build
  except:
    refs:
      - master@knot/knot-resolver
      - master@knot/security/knot-resolver
    variables:
      - $SKIP_CI == "1"
  artifacts:
    when: always
    paths:
      - .local
      - build_ci*
      - build_dist/meson-dist/*.tar.xz
  tags:
    - docker
    - linux
    - amd64

build:
  <<: *build
  script:
      # sendmmsg: deckard can't handle that syscall
    - meson build_ci --default-library=static --prefix=$PREFIX -Dwerror=true -Dextra_tests=enabled -Dsendmmsg=disabled
    - ninja -C build_ci
    - ninja -C build_ci install >/dev/null
    - ${MESON_TEST} --suite unit --suite config

# }}}

# test {{{
.test: &test
  stage: test
  except:
    refs:
      - master@knot/knot-resolver
      - master@knot/security/knot-resolver
    variables:
      - $SKIP_CI == "1"
  tags:
    - docker
    - linux
    - amd64
  dependencies:
    - build
  before_script:
    # meson detects changes and performs useless rebuild; hide the log
    - ninja -C build_ci* &>/dev/null
    - rm build_ci*/meson-logs/testlog*.txt  # start with clean testlog
  artifacts:
    when: always
    paths:
      - build_ci*/meson-logs/testlog*.txt
      - tmpdeckard*

.test_flaky: &test_flaky
  <<: *test
  retry:
    max: 1
    when:
      - script_failure

.test_nodep: &test_nodep
  stage: test
  except:
    refs:
      - master@knot/knot-resolver
      - master@knot/security/knot-resolver
    variables:
      - $SKIP_CI == "1"
  dependencies: []  # do not download build artifacts
  tags:
    - docker

deckard:
  <<: *test_flaky
  variables:
    TMPDIR: $CI_PROJECT_DIR
  script:
    - ${MESON_TEST} --suite integration

image: $CI_REGISTRY/knot/knot-resolver/ci/debian-stable:knot-2.7

variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone # sometimes unclean submodule dirs otherwise
  PREFIX: $CI_PROJECT_DIR/.local
  LD_LIBRARY_PATH: $CI_PROJECT_DIR/.local/lib
  RESPDIFF_PRIORITY: 5
  RESPDIFF_COUNT: 1
  RESPDIFF_FORCE: 0
  RESPERF_FORCE: 0

stages:
  - build
  - test
  - test1
  - test2
  - test3
  - test4
  - test5
  - coverage
  - extended
  - deploy

.build: &build
  variables:
    CFLAGS: -Werror -ggdb
  stage: build
  except:
    - master
  script:
    - rm daemon/lua/kres-gen.lua
    - make -k all
    - STATUS="$(git status --untracked-files=normal --porcelain)"
    - test -n "${STATUS}" && echo "${STATUS}" && echo "Build + install made working tree dirty, did you forget to update something?" && exit 2
    - make install
  artifacts:
    untracked: true
  tags:
    - docker
    - linux
    - amd64

build:linux:amd64:
  <<: *build

build:asan:linux:amd64:
  <<: *build
  variables:
    CFLAGS: -Werror -ggdb3 -O0 -fsanitize=address -fno-omit-frame-pointer


pytests:extended: &pytests
  stage: test
  dependencies:
    - build:asan:linux:amd64
  except:
    - master
  script:
    - PATH="$PREFIX/sbin:$PATH" ./ci/pytests/run-extended.sh
  artifacts:
    expire_in: '1 hour'
  tags:
    - docker
    - linux
    - amd64


pytests:run1:
  <<: *pytests
  stage: test1

pytests:run2:
  <<: *pytests
  stage: test2

pytests:run3:
  <<: *pytests
  stage: test3

pytests:run4:
  <<: *pytests
  stage: test4

pytests:run5:
  <<: *pytests
  stage: test4

pytests:run6:
  <<: *pytests
  stage: test5

pytests:run7:
  <<: *pytests
  stage: test5

pytests:run8:
  <<: *pytests
  stage: test6

pytests:run9:
  <<: *pytests
  stage: test6

pytests:run10:
  <<: *pytests
  stage: test6

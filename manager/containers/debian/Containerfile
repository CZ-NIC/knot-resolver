FROM docker.io/debian:latest

ENV \
  # build:
  BUILD_ONLY_PACKAGES='wget' \
  # python:
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PYTHONDONTWRITEBYTECODE=1 \
  # pip:
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # poetry:
  POETRY_VERSION=1.1.5 \
  POETRY_NO_INTERACTION=1 \
  POETRY_VIRTUALENVS_CREATE=false \
  POETRY_CACHE_DIR='/var/cache/pypoetry' \
  PATH="$PATH:/root/.poetry/bin" \
  NODE_VERSION=node_14.x
ENV LC_ALL=C.UTF-8

# System deps:
# System deps:
RUN apt-get update \
  && apt-get install --no-install-recommends -y \
    bash \
    build-essential git ca-certificates \
    python3 python3-pip python3-dev python3-setuptools python3-wheel \
    libcairo2-dev libgirepository1.0-dev \
    gettext \
    systemd \
    curl \
    dbus \
    libcairo2-dev libgirepository1.0-dev \
    # Defining build-time-only dependencies:
    $BUILD_ONLY_PACKAGES \
  # Install Knot Resolver
  && wget https://secure.nic.cz/files/knot-resolver/knot-resolver-release.deb \
  && dpkg -i knot-resolver-release.deb \
  && rm knot-resolver-release.deb \
  && apt-get update && apt-get install -y --no-install-recommends knot-resolver \
  # Installing `poetry` package manager:
  # https://github.com/python-poetry/poetry
  && curl -sSL 'https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py' | python3 \
  && poetry --version \
  # Install test dependencies
  && apt-get install --no-install-recommends procps curl \
  && pip3 install requests requests-unixsocket \
  # Removing build-time-only dependencies:
  && apt-get remove -y $BUILD_ONLY_PACKAGES \
  # Cleaning cache:
  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
  && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# Create knot-resolver-manager systemd service
COPY ./config/knot-resolver-manager.service /etc/systemd/system

# Copy only requirements, to cache them in docker layer
# no poetry.lock, because here we have a different python version
COPY ./pyproject.toml ./yarn.lock ./package.json /code/

WORKDIR /code

# Install project dependencies
RUN poetry --version \
  # Aghghgh! The packaged pip is buggy and just plainly fails installing dependencies
  # so here we update it
  && python3 -m pip --version \
  && python3 -m pip install -U pip \
  && python3 -m pip --version \
  # and install the dependencies
  && poetry install --no-dev --no-interaction --no-ansi

# Copy the remaining code
COPY . /code

CMD ["/bin/systemd"]
"""
This type stub file was generated by pyright.
"""

class Proxy:
    """ Class for wrapping a shared resource object and getting
        notified when it's deleted
    """
    def __init__(self, object, **kwargs) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    def __getattr__(self, name): # -> Any:
        ...
    


class ReferenceCounter:
    """ Class for tracking references to a shared resource
    """
    def __init__(self, **kwargs) -> None:
        ...
    
    def get_count(self): # -> int:
        ...
    
    def increment(self): # -> None:
        ...
    
    def decrement(self): # -> None:
        ...
    


class SocketManager:
    """ Class for managing sockets in servers that create/bind/listen
        before forking multiple child processes to accept()
        Sockets are managed at the process group level and referenced counted
        at the process level b/c that's really the only place to hook in
    """
    def __init__(self, socket_config, **kwargs) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def config(self): # -> Unknown:
        ...
    
    def is_prepared(self): # -> bool:
        ...
    
    def get_socket(self): # -> Proxy:
        ...
    
    def get_socket_ref_count(self): # -> int:
        ...
